title Reset Password Flow

actor Customer
boundary Auth-Service
entity Account
entity PasswordHistory
entity ResetToken
boundary Notification-Service
database Database

== Request Password Reset ==
Customer->Auth-Service: Request password reset (email)
Auth-Service->Database: Check if email exists
Auth-Service<--Database: Account exists
Auth-Service->ResetToken: Generate reset token
Auth-Service->Database: Store reset token
Auth-Service<--Database: Confirmation of storage
Auth-Service->Notification-Service: Send reset email (email, token)
Notification-Service-->Customer: Email with reset link
Customer<--Auth-Service: Check email for reset link

== Reset Password ==
Customer->Auth-Service: Submit reset link and new password (token, new_password)
Auth-Service->Database: Validate reset token
Auth-Service<--Database: Token valid
Auth-Service->Database: Retrieve 3 latest passwords from PasswordHistory
Auth-Service<--Database: List of 3 latest passwords
alt New password not match to 3 latest passwords
  Auth-Service->Account: Update password with new_password
  Auth-Service->PasswordHistory: Add new_password to history
  Auth-Service->Database: Store updated account and password history
  Auth-Service<--Database: Confirmation of update
  Auth-Service->Database: Invalidate reset token
  Auth-Service<--Database: Token invalidated
  Customer<--Auth-Service: Password reset successful
else New password matches one of 3 latest passwords
  Customer<--Auth-Service: Error: New password must differ from last 3 passwords
end